caption = caption1,
x="",
y="")
ur
ur <-   ggplot(data_cono,
aes(x = reorder(str_wrap(id_clean, 15), -as.numeric(id_num)),
y = value,
fill = id,
label = Porcentaje,
text = text)) +
scale_y_continuous(labels = scales::percent)+
geom_col(width = 0.5) +
#coord_flip(clip = "off") +
facet_grid(cols =vars(reorder(Fecha, fecha)))+
scale_fill_manual("", values = data_cono$color)+
theme_minimal() +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
caption = caption1,
x="",
y="")
ur
print <- ur+
geom_label(size = 7)+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.y = element_text(size = 25, vjust = 0.5),
axis.text.x = element_blank(),
legend.position = "none")
print
print <- ur+
geom_label(size = 7)+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.y = element_text(size = 25, vjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom")
print
print <- ur+
geom_label(size = 7, show.legend = F)+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.y = element_text(size = 25, vjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom")
print
ur <-   ggplot(data_cono,
aes(x = reorder(str_wrap(id_clean, 15), -as.numeric(id_num)),
y = value,
fill = str_wrap(id_clean, 15),
label = Porcentaje,
text = text)) +
scale_y_continuous(labels = scales::percent)+
geom_col(width = 0.5) +
#coord_flip(clip = "off") +
facet_grid(cols =vars(reorder(Fecha, fecha)))+
scale_fill_manual("", values = data_cono$color)+
theme_minimal() +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
caption = caption1,
x="",
y="")
print <- ur+
geom_label(size = 7, show.legend = F)+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.y = element_text(size = 25, vjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom")
print
ur <-   ggplot(data_cono,
aes(x = reorder(str_wrap(id_clean, 15), -as.numeric(id_num)),
y = value,
fill = str_wrap(id_clean, 25),
label = Porcentaje,
text = text)) +
scale_y_continuous(labels = scales::percent)+
geom_col(width = 0.5) +
#coord_flip(clip = "off") +
facet_grid(cols =vars(reorder(Fecha, fecha)))+
scale_fill_manual("", values = data_cono$color)+
theme_minimal() +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
caption = caption1,
x="",
y="")
print <- ur+
geom_label(size = 7, show.legend = F)+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.y = element_text(size = 25, vjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom")
print
ur <-   ggplot(data_cono,
aes(x = reorder(str_wrap(id_clean, 15), -as.numeric(id_num)),
y = value,
fill = str_wrap(id_clean, 25),
label = Porcentaje,
text = text)) +
scale_y_continuous(labels = scales::percent)+
geom_col(width = 0.5) +
#coord_flip(clip = "off") +
facet_grid(cols =vars(reorder(Fecha, fecha)))+
scale_fill_manual("", values = data_cono$color)+
theme_minimal() +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
caption = caption1,
x="",
y="")
print <- ur+
geom_label(size = 7, show.legend = F)+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.y = element_text(size = 25, vjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom")
print
ur <-   ggplot(data_cono,
aes(x = reorder(str_wrap(id_clean, 15), -as.numeric(id_num)),
y = value,
fill = str_wrap(id_clean, 35),
label = Porcentaje,
text = text)) +
scale_y_continuous(labels = scales::percent)+
geom_col(width = 0.5) +
#coord_flip(clip = "off") +
facet_grid(cols =vars(reorder(Fecha, fecha)))+
scale_fill_manual("", values = data_cono$color)+
theme_minimal() +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
caption = caption1,
x="",
y="")
print <- ur+
geom_label(size = 7, show.legend = F)+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.y = element_text(size = 25, vjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom")
print
plotly <- ggplotly(ur+theme(axis.text.x = element_text(size=8)), tooltip = c("x","text"),height=600)%>%
layout(
title = "",
hovermode = "x",
showlegend = F,
annotations = list(x = 1, y = -0.1,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
plotly <- ggplotly(ur+theme(axis.text.x = element_text(size=8)), tooltip = c("text"),height=600)%>%
layout(
title = "",
hovermode = "x",
showlegend = F,
annotations = list(x = 1, y = -0.1,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
pregunta1 <- "¿Cuál de las siguientes opciones describe mejor sus sentimientos sobre el coronavirus en México?"
titulo <- "Sentimientos hacia futuro sobre COVID-19 - Parametría"
subtitulo <- pregunta1
data_cono <- cuadros_OP%>%
ungroup() %>%
filter(str_detect(Categoría, "Sentimiento")) %>%
mutate(Fecha = format(fecha, "%B-%Y"),
id = factor(id),
id_clean = ifelse(as.numeric(id_num) == 99,"No sabe", id_clean ))%>%
arrange(fecha) %>% # sort
mutate_at(vars(Fecha), ~factor(., levels=unique(.)))%>%
arrange(fecha, id)
ur <-   ggplot(data_cono,
aes(x = reorder(str_wrap(id_clean, 25), -as.numeric(id_num)),
y = value,
fill = id,
label = Porcentaje,
text = text)) +
scale_y_continuous(labels = scales::percent)+
geom_col(width = 0.5) +
coord_flip(clip = "off") +
facet_grid(cols =vars(reorder(Fecha, fecha)))+
scale_fill_manual("", values = data_cono$color)+
theme_minimal() +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
caption = caption1,
x="",
y="")
print <- ur+
geom_label(size = 7)+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.y = element_text(size = 20, vjust = 0.5),
axis.text.x = element_blank(),
legend.position = "none")
print
ur <-   ggplot(data_cono,
aes(x = reorder(str_wrap(id_clean, 15), -as.numeric(id_num)),
y = value,
fill = str_wrap(id_clean, 35),
label = Porcentaje,
text = text)) +
scale_y_continuous(labels = scales::percent)+
geom_col(width = 0.5) +
#coord_flip(clip = "off") +
facet_grid(cols =vars(reorder(Fecha, fecha)))+
scale_fill_manual("", values = data_cono$color)+
theme_minimal() +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
caption = caption1,
x="",
y="")
ur
print <- ur+
geom_label(size = 7, show.legend = F)+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.y = element_text(size = 25, vjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom")
print
data_cono <- cuadros_OP%>%
ungroup() %>%
filter(str_detect(Categoría, "Sentimiento")) %>%
mutate(Fecha = format(fecha, "%B-%Y"),
id = factor(id),
id_clean = ifelse(as.numeric(id_num) == 99,"No sabe", id_clean ))%>%
arrange(fecha) %>% # sort
mutate_at(vars(Fecha), ~factor(., levels=unique(.)))%>%
arrange(fecha, -id)
ur <-   ggplot(data_cono,
aes(x = reorder(str_wrap(id_clean, 15), -as.numeric(id_num)),
y = value,
fill = str_wrap(id_clean, 35),
label = Porcentaje,
text = text)) +
scale_y_continuous(labels = scales::percent)+
geom_col(width = 0.5) +
#coord_flip(clip = "off") +
facet_grid(cols =vars(reorder(Fecha, fecha)))+
scale_fill_manual("", values = data_cono$color)+
theme_minimal() +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
caption = caption1,
x="",
y="")
ur
ur <-   ggplot(data_cono,
aes(x = reorder(str_wrap(id_clean, 15), -as.numeric(id_num)),
y = value,
fill = reorder(str_wrap(id_clean, 35), -as.numeric(id_num)),
label = Porcentaje,
text = text)) +
scale_y_continuous(labels = scales::percent)+
geom_col(width = 0.5) +
#coord_flip(clip = "off") +
facet_grid(cols =vars(reorder(Fecha, fecha)))+
scale_fill_manual("", values = data_cono$color)+
theme_minimal() +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
caption = caption1,
x="",
y="")
ur
print <- ur+
geom_label(size = 7, show.legend = F)+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.y = element_text(size = 25, vjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom")
print
data_cono <- cuadros_OP%>%
ungroup() %>%
filter(str_detect(Categoría, "Sentimiento")) %>%
mutate(Fecha = format(fecha, "%B-%Y"),
id = factor(id),
id_clean = ifelse(as.numeric(id_num) == 99,"No sabe", id_clean ))%>%
arrange(fecha) %>% # sort
mutate_at(vars(Fecha), ~factor(., levels=unique(.)))%>%
arrange(fecha, id)
print
(
ur <-   ggplot(data_cono,
aes(x = reorder(str_wrap(id_clean, 15), -as.numeric(id_num)),
y = value,
fill = reorder(str_wrap(id_clean, 35), -as.numeric(id_num)),
label = Porcentaje,
text = text)) +
scale_y_continuous(labels = scales::percent)+
geom_col(width = 0.5) +
#coord_flip(clip = "off") +
facet_grid(cols =vars(reorder(Fecha, fecha)))+
scale_fill_manual("", values = data_cono$color)+
theme_minimal() +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
caption = caption1,
x="",
y="")
ur <-   ggplot(data_cono,
aes(x = reorder(str_wrap(id_clean, 15), -as.numeric(id_num)),
y = value,
fill = reorder(str_wrap(id_clean, 35), -as.numeric(id_num)),
label = Porcentaje,
text = text)) +
scale_y_continuous(labels = scales::percent)+
geom_col(width = 0.5) +
#coord_flip(clip = "off") +
facet_grid(cols =vars(reorder(Fecha, fecha)))+
scale_fill_manual("", values = data_cono$color)+
theme_minimal() +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
caption = caption1,
x="",
y="")
print <- ur+
geom_label(size = 7, show.legend = F)+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.y = element_text(size = 25, vjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom")
print
data_cono <- cuadros_OP%>%
ungroup() %>%
filter(str_detect(Categoría, "Sentimiento")) %>%
mutate(Fecha = format(fecha, "%B-%Y"),
id = factor(id),
id_clean = ifelse(as.numeric(id_num) == 99,"No sabe", id_clean ))%>%
arrange(fecha) %>% # sort
mutate_at(vars(Fecha), ~factor(., levels=unique(.)))%>%
arrange(fecha, id_num)
data_cono <- cuadros_OP%>%
ungroup() %>%
filter(str_detect(Categoría, "Sentimiento")) %>%
mutate(Fecha = format(fecha, "%B-%Y"),
id = factor(id),
id_clean = ifelse(as.numeric(id_num) == 99,"No sabe", id_clean ))%>%
arrange(fecha) %>% # sort
mutate_at(vars(Fecha), ~factor(., levels=unique(.)))%>%
arrange(Fecha, id_num)
data_cono <- cuadros_OP%>%
ungroup() %>%
filter(str_detect(Categoría, "Sentimiento")) %>%
mutate(Fecha = format(fecha, "%B-%Y"),
id = factor(id),
id_clean = ifelse(as.numeric(id_num) == 99,"No sabe", id_clean ))%>%
arrange(Fecha) %>% # sort
mutate_at(vars(Fecha), ~factor(., levels=unique(.)))%>%
arrange(Fecha, id_num)
ur <-   ggplot(data_cono,
aes(x = reorder(str_wrap(id_clean, 15), -as.numeric(id_num)),
y = value,
fill = reorder(str_wrap(id_clean, 35), -as.numeric(id_num)),
label = Porcentaje,
text = text)) +
scale_y_continuous(labels = scales::percent)+
geom_col(width = 0.5) +
#coord_flip(clip = "off") +
facet_grid(cols =vars(reorder(Fecha, fecha)))+
scale_fill_manual("", values = data_cono$color)+
theme_minimal() +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
caption = caption1,
x="",
y="")
print <- ur+
geom_label(size = 7, show.legend = F)+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.y = element_text(size = 25, vjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom")
print
data_cono <- cuadros_OP%>%
ungroup() %>%
filter(str_detect(Categoría, "Sentimiento")) %>%
mutate(Fecha = format(fecha, "%B-%Y"),
id = factor(id),
id_clean = ifelse(as.numeric(id_num) == 99,"No sabe", id_clean ))%>%
arrange(Fecha) %>% # sort
mutate_at(vars(Fecha), ~factor(., levels=unique(.)))%>%
arrange(Fecha, -id_num)
data_cono <- cuadros_OP%>%
ungroup() %>%
filter(str_detect(Categoría, "Sentimiento")) %>%
mutate(Fecha = format(fecha, "%B-%Y"),
id = factor(id),
id_clean = ifelse(as.numeric(id_num) == 99,"No sabe", id_clean ))%>%
arrange(Fecha) %>% # sort
mutate_at(vars(Fecha), ~factor(., levels=unique(.)))%>%
arrange(Fecha, desc(id_num))
ur <-   ggplot(data_cono,
aes(x = reorder(str_wrap(id_clean, 15), -as.numeric(id_num)),
y = value,
fill = reorder(str_wrap(id_clean, 35), -as.numeric(id_num)),
label = Porcentaje,
text = text)) +
scale_y_continuous(labels = scales::percent)+
geom_col(width = 0.5) +
#coord_flip(clip = "off") +
facet_grid(cols =vars(reorder(Fecha, fecha)))+
scale_fill_manual("", values = data_cono$color)+
theme_minimal() +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
caption = caption1,
x="",
y="")
ur
print <- ur+
geom_label(size = 7, show.legend = F)+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.y = element_text(size = 25, vjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom")
print
plotly <- ggplotly(ur+theme(axis.text.x = element_text(size=8)), tooltip = c("x","text"),height=600)%>%
layout(
title = "",
hovermode = "x",
showlegend = F,
annotations = list(x = 1, y = -0.1,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
plotly <- ggplotly(ur+theme(axis.text.x = element_text(size=8)), tooltip = c("text"),height=600)%>%
layout(
title = "",
hovermode = "x",
showlegend = F,
annotations = list(x = 1, y = -0.1,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
setwd("GitHub/COVID-19-Opinion/")
## Build PDFs
rmarkdown::render(input = "AnalisisParametria.Rmd",
output_format = "pdf_document",  output_file = "AnalisisParametria")
## Build PDFs
rmarkdown::render(input = "AnalisisParametria.Rmd",
output_format = "pdf_document",  output_file = "AnalisisParametria")
rm(list = ls(all.names = TRUE))
### Build Webpage
rmarkdown::render(input = "AnalisisParametria.Rmd",
output_format = "html_document", output_file = "index")
