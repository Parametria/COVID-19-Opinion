ur <-   ggplot(data_cono,
aes(x = reorder(str_wrap(paste0(v_var, " "), 25), -as.numeric(id_num)),
y = value,
fill = id,
label = Porcentaje,
text = text)) +
geom_col(width = 0.5) +
scale_fill_manual(values = data_cono$color)+
coord_flip(clip = "off") +
#facet_grid(cols =vars(Fecha))+
theme_minimal() +
ylim(0, 1.05) +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
x="",
y="",
fill = "")
ur
data_cono <- d %>%
arrange(v_var,-id_num)
ur <-   ggplot(data_cono,
aes(x = reorder(str_wrap(paste0(v_var, " "), 25), -as.numeric(id_num)),
y = value,
fill = id,
label = Porcentaje,
text = text)) +
geom_col(width = 0.5) +
scale_fill_manual(values = data_cono$color)+
coord_flip(clip = "off") +
#facet_grid(cols =vars(Fecha))+
theme_minimal() +
ylim(0, 1.05) +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
x="",
y="",
fill = "")
ur
pregunta <- "¿Cuál considera que es el principal problema del país en este momento?"
titulo <- "Opinión de Principal Problema en México - Parametría"
subtitulo <- pregunta
data_cono <- cuadros_OP_2 %>%
filter(reporte=="largo", categoría=="g7") %>%
mutate(Fecha = format(fecha, "%B-%Y")) %>%
arrange(fecha) %>% # sort
mutate_at(vars(Fecha), ~factor(., levels=unique(.))) %>%
arrange(Fecha, id)
ur <-   ggplot(data_cono,
aes(x = reorder(str_wrap(id, 10), -as.numeric(stri_extract_first(id, regex="[0-9]+"))), y = value,
fill = id,
label = Porcentaje,
text = text)) +
geom_col(width = 0.5) +
scale_fill_manual(values = data_cono$color)+
coord_flip(clip = "off") +
facet_grid(cols =vars(Fecha))+
theme_minimal() +
ylim(0, 1.05) +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
x="",
y="")
ur
ur <-   ggplot(data_cono,
aes(x = reorder(str_wrap(id, 10), -id_num), y = value,
fill = id,
label = Porcentaje,
text = text)) +
geom_col(width = 0.5) +
scale_fill_manual(values = data_cono$color)+
coord_flip(clip = "off") +
facet_grid(cols =vars(Fecha))+
theme_minimal() +
ylim(0, 1.05) +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
x="",
y="")
ur
print <- ur+ geom_label(size = 8)+
scale_y_percent(limits = c(0,(max(data_cono$value)+.1)))+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.x = element_text(size = 25, vjust = 0.5),
axis.text.y = element_text(size = 15),
legend.position = "none")
print
print <- ur+ geom_label(size = 8)+
scale_y_percent(limits = c(0,(max(data_cono$value)+.1)))+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.x = element_text(size = 25, vjust = -0.5),
axis.text.y = element_text(size = 15),
legend.position = "none")
print
print <- ur+ geom_label(size = 8)+
scale_y_percent(limits = c(0,(max(data_cono$value)+.1)))+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 15, vjust = -0.5),
legend.position = "none")
print
print <- ur+ geom_label(size = 8)+
scale_y_percent(limits = c(0,(max(data_cono$value)+.1)))+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 15, hjust = -0.5),
legend.position = "none")
print
print <- ur+ geom_label(size = 8)+
scale_y_percent(limits = c(0,(max(data_cono$value)+.1)))+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 15, hjust = -0.1),
legend.position = "none")
print
d <- cuadros_OP %>%
filter(reporte=="corto", v_id=="g4")
pregunta <- unique(d$fiuf)
titulo <- "Efectos del coronavirus en el hogar"
subtitulo <- pregunta
data_cono <- d %>%
mutate(
Fecha = format(fecha, "%B-%Y"),
Porcentaje = paste0(props, "%")
)%>%
arrange(fecha) %>% # sort
mutate_at(vars(Fecha), ~factor(., levels=unique(.))) %>%
arrange(Fecha, orden)
ur <-
ggplot(data_cono,
aes(x = reorder(str_wrap(var, 15), as.numeric(orden)),
y = props/100,
fill = str_wrap(var, 35),
label = Porcentaje,
text = Porcentaje)) +
scale_y_continuous(labels = scales::percent)+
geom_col(width = 0.5, show.legend = F) +
#coord_flip(clip = "off") +
facet_grid(cols =vars(reorder(Fecha, fecha)))+
#scale_fill_manual("", values = data_cono$color)+
theme_minimal() +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
caption = caption1,
x="",
y="")
ur
d <- cuadros_OP %>%
filter(reporte=="corto", v_id=="g5")
pregunta <- unique(d$fiuf)
titulo <- "Sentimientos hacia el Coronavirus"
subtitulo <- pregunta
data_cono <- d %>%
mutate(
Fecha = format(fecha, "%B-%Y"),
Porcentaje = paste0(props, "%")
)%>%
arrange(fecha) %>% # sort
mutate_at(vars(Fecha), ~factor(., levels=unique(.))) %>%
arrange(Fecha, orden)
ur <-
ggplot(data_cono,
aes(x = Fecha,
y = props/100,
colour =var ,
group = var,
label = Porcentaje,
text = Porcentaje)) +
geom_line(size = 1.5) +
#scale_color_manual("",values = data_cono$color)+
theme_minimal() +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
x="",
y="")
print <-  ur +
geom_label(size = 8, show.legend = FALSE) +
scale_y_percent(
limits = c(0,1),
breaks = seq(0,100,25),
labels = paste0(
as.character(seq(0,100,25)), "%"
)
) +
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.x = element_text(size = 25, vjust = 0.5),
axis.text.y = element_text(size = 15),
legend.position = "top"
)
print
ur <-
ggplot(data_cono,
aes(x = Fecha,
y = props/100,
colour =var ,
group = var,
label = Porcentaje,
text = Porcentaje)) +
geom_line(size = 1.5) +
#scale_color_manual("",values = data_cono$color)+
theme_minimal() +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
x="",
y="",
color = "")
print <-  ur +
geom_label(size = 8, show.legend = FALSE) +
scale_y_percent(
limits = c(0,1),
breaks = seq(0,100,25),
labels = paste0(
as.character(seq(0,100,25)), "%"
)
) +
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.x = element_text(size = 25, vjust = 0.5),
axis.text.y = element_text(size = 15),
legend.position = "top"
)
print
d <- cuadros_OP %>%
filter(reporte=="largo", v_id=="g10")
pregunta <- "¿Usted tiene miedo de ser contagiado con el Coronavirus?"
titulo <- "Sentimientos durante Pandemia en México"
subtitulo <- pregunta
data_cono <- cuadros_OP_2%>%
filter(reporte=="largo", v_id=="g10")%>%
mutate(Fecha = format(fecha, "%B-%Y"))%>%
arrange(fecha) %>% # sort
mutate_at(vars(Fecha), ~factor(., levels=unique(.)))%>%
arrange(Fecha, id)#%>%
data_cono <- cuadros_OP_2%>%
filter(reporte=="largo", categoría=="g10")%>%
mutate(Fecha = format(fecha, "%B-%Y"))%>%
arrange(fecha) %>% # sort
mutate_at(vars(Fecha), ~factor(., levels=unique(.)))%>%
arrange(Fecha, id)#%>%
ur <-   ggplot(data_cono,
aes(x = Fecha,
y = value,
color =id,
group = id,
label = Porcentaje,
text = text)) +
scale_y_continuous(labels = scales::percent)+
geom_line(size = 1) +
#facet_grid(cols =vars(Fecha))+
scale_color_manual(values = data_cono$color)+
theme_minimal() +
ylim(0, 1.05) +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
x="",
y="")
ur
pregunta1 <- "¿Cuál de las siguientes opciones describe mejor sus sentimientos sobre el coronavirus en México?"
titulo <- "Sentimientos hacia futuro sobre COVID-19 - Parametría"
subtitulo <- pregunta1
data_cono <- cuadros_OP_2%>%
ungroup() %>%
filter(reporte=="largo", categoría=="g9") %>%
mutate(Fecha = format(fecha, "%B-%Y"),
id = factor(id),
id_clean = ifelse(as.numeric(id_num) == 99,"No sabe", id_clean ))%>%
arrange(Fecha) %>% # sort
mutate_at(vars(Fecha), ~factor(., levels=unique(.)))%>%
arrange(Fecha, desc(id_num))
ur <-   ggplot(data_cono,
aes(x = reorder(str_wrap(id_clean, 15), -as.numeric(id_num)),
y = value,
fill = reorder(str_wrap(id_clean, 35), -as.numeric(id_num)),
label = Porcentaje,
text = text)) +
scale_y_continuous(labels = scales::percent)+
geom_col(width = 0.5) +
#coord_flip(clip = "off") +
facet_grid(cols =vars(reorder(Fecha, fecha)))+
scale_fill_manual("", values = data_cono$color)+
theme_minimal() +
labs(title = str_wrap(titulo, 50),
subtitle = str_wrap(subtitulo, 50),
caption = caption1,
x="",
y="")
ur
print <- ur+
geom_label(size = 7, show.legend = F)+
theme(plot.title = element_text(size = 35, face = "bold"),
plot.subtitle = element_text(size = 25),
plot.caption = element_text(size = 15),
panel.spacing.x = unit(3, "lines"),
axis.text.y = element_text(size = 25, vjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom")
print
## Build PDFs
rmarkdown::render(input = "AnalisisParametria.Rmd",
output_format = "pdf_document",  output_file = "AnalisisParametria")
rm(list = ls(all.names = TRUE))
## Build PDFs
rmarkdown::render(input = "AnalisisParametria.Rmd",
output_format = "pdf_document",  output_file = "AnalisisParametria")
rm(list = ls(all.names = TRUE))
## Build PDFs
rmarkdown::render(input = "AnalisisParametria.Rmd",
output_format = "pdf_document",  output_file = "AnalisisParametria")
warnings
warnings()
### Build Webpage
rmarkdown::render(input = "AnalisisParametria.Rmd",
output_format = "html_document", output_file = "index")
library(tidyverse)
pendiente <- tribble(
~Angulo, ~Distancia,
1.404990,	6.78,
1.506219,	6.78,
1.466077,	6.78,
1.500983,	6.78,
1.438151,	6.78,
1.466077,	6.78,
1.535890,	6.78,
1.518436,	6.78,
1.588250,	6.78,
1.570796,	6.78,
1.562070,	6.78
)
pendiente <- pendiente %>%
mutate(Angulo = deg2rad(180 - Angulo),
coseno = cos(Angulo))
pendiente <- pendiente %>%
mutate(coseno = cos(Angulo))
pendiente <- pendiente %>%
mutate(coseno = cos(pi - Angulo))
pendiente
pendiente <- pendiente %>%
mutate(coseno = cos(pi - Angulo),
pen = Distancia * coseno)
pendiente
pendiente <- tribble(
~Angulo, ~Distancia,
1.404990,	6.78,
1.506219,	6.78,
1.466077,	6.78,
1.500983,	6.78,
1.438151,	6.78,
1.466077,	6.78,
1.535890,	6.78,
1.518436,	6.78,
1.588250,	6.78,
1.570796,	6.78,
1.562070,	6.78
)
pendiente <- pendiente %>%
mutate(coseno = cos(Angulo),
pen = Distancia * coseno)
pendiente
pendiente <- tribble(
~Angulo, ~Distancia,
99.5,	6.78,
93.7,	6.78,
96.0,	6.78,
94.0,	6.78,
97.6,	6.78,
96.0,	6.78,
92.0,	6.78,
93.0,	6.78,
89.0,	6.78,
90.0,	6.78,
90.5,	6.78,
)
i
pendiente <- pendiente %>%
mutate(coseno = cos(Angulo),
pen = Distancia * coseno)
pendiente <- pendiente %>%
mutate(Angulo = Angulo*pi/180,
coseno = cos(Angulo),
pen = Distancia * coseno)
pendiente
pendiente <- tribble(
~Angulo, ~Distancia,
99.5,	6.78,
93.7,	6.78,
96.0,	6.78,
94.0,	6.78,
97.6,	6.78,
96.0,	6.78,
92.0,	6.78,
93.0,	6.78,
89.0,	6.78,
90.0,	6.78,
90.5,	6.78,
)
pendiente <- pendiente %>%
mutate(Angulo = (180 - Angulo)*pi/180,
coseno = cos(Angulo),
pen = Distancia * coseno)
pendiente
pendiente <- tribble(
~Angulo, ~Distancia,
99.5,	6.78,
93.7,	6.78,
96.0,	6.78,
94.0,	6.78,
97.6,	6.78,
96.0,	6.78,
92.0,	6.78,
93.0,	6.78,
89.0,	6.78,
90.0,	6.78,
90.5,	6.78,
)
pendiente <- pendiente %>%
mutate(Angulo = (180 - Angulo),
Angulo2 = Angulo*pi/180,
coseno = cos(Angulo2),
pen = Distancia * coseno)
pendiente
pendiente <- tribble(
~Angulo, ~Distancia,
99.5,	6.78,
93.7,	6.78,
96.0,	6.78,
94.0,	6.78,
97.6,	6.78,
96.0,	6.78,
92.0,	6.78,
93.0,	6.78,
89.0,	6.78,
90.0,	6.78,
90.5,	6.78,
)
pendiente <- pendiente %>%
mutate(Angulo = (180 - Angulo),
Angulo2 = Angulo*pi/180,
coseno = cos(Angulo2),
sen = sin(Angulo2),
pen2 = Distancia *sen,
pen = Distancia * coseno)
pendiente
pendiente <- tribble(
~Angulo, ~Distancia,
99.5,	6.78,
93.7,	6.78,
96.0,	6.78,
94.0,	6.78,
97.6,	6.78,
96.0,	6.78,
92.0,	6.78,
93.0,	6.78,
89.0,	6.78,
90.0,	6.78,
90.5,	6.78,
)
pendiente <- pendiente %>%
mutate(Angulo = Angulo*pi/180,
Angulo2 = pi- Angulo ,
coseno = cos(Angulo2),
sen = sin(Angulo2),
pen2 = Distancia *sen,
pen = Distancia * coseno)
pendiente
pendiente <- tribble(
~Angulo, ~Distancia,
99.5,	6.78,
93.7,	6.78,
96.0,	6.78,
94.0,	6.78,
97.6,	6.78,
96.0,	6.78,
92.0,	6.78,
93.0,	6.78,
89.0,	6.78,
90.0,	6.78,
90.5,	6.78,
)
pendiente <- pendiente %>%
mutate(Angulo = ,
Angulo2 = pi- Angulo*pi/180,
coseno = cos(Angulo2),
sen = sin(Angulo2),
pen2 = Distancia *sen,
pen = Distancia * coseno)
pendiente <- pendiente %>%
mutate(#Angulo = ,
Angulo2 = pi- Angulo*pi/180,
coseno = cos(Angulo2),
sen = sin(Angulo2),
pen2 = Distancia *sen,
pen = Distancia * coseno)
pendiente
