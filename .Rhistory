text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
subtitulo <- titulo
htmlwidgets::saveWidget(plotly,selfcontained = F, file="Emojis_twitter.html")
plotly <- plotly::ggplotly(ur,
tooltip = c("label", "y")
)%>%
plotly::layout(title = list(text = paste0(titulo,
'<br>',
'<sup>',
subtitulo,
'</sup>'),
y = 1.1),
tickvalues ="",
annotations = list(x = 1, y = 0,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
caption <- titulo
plotly <- plotly::ggplotly(ur,
tooltip = c("label", "y")
)%>%
plotly::layout(title = list(text = paste0(titulo,
'<br>',
'<sup>',
subtitulo,
'</sup>'),
y = 1.1),
tickvalues ="",
annotations = list(x = 1, y = 0,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
plotly
plotly <- plotly::ggplotly(ur,
tooltip = c("label", "y")
)%>%
plotly::layout(title = list(text = paste0(titulo,
'<br>',
'<sup>',
subtitulo,
'</sup>'),
y = 1.1),
tickvalues ="",
images = ~label,
annotations = list(x = 1, y = 0,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
plotly <- plotly::ggplotly(ur,
tooltip = c("label", "y")
)%>%
plotly::layout(title = list(text = paste0(titulo,
'<br>',
'<sup>',
subtitulo,
'</sup>'),
y = 1.1),
tickvalues ="",
images = list(source=~label),
annotations = list(x = 1, y = 0,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
View(thead_emojis)
plotly <- plotly::ggplotly(ur,
tooltip = c("label", "y")
)%>%
plotly::layout(title = list(text = paste0(titulo,
'<br>',
'<sup>',
subtitulo,
'</sup>'),
y = 1.1),
tickvalues ="",
images = list(source=~url),
annotations = list(x = 1, y = 0,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
ur <- ggplot(data_emojis,
aes(x=emojis,
y=`Número de Tweets`, fill = emojis,  label = emojis, image=url)) +
geom_bar(stat = "identity") +
geom_image(size = 5, vjust = 1) +
guides(fill = F)+
scale_fill_discrete(NULL, NULL, NULL)+
labs(title=str_wrap(titulo, width = 70),
y="Número de tweets",
x="") +
theme_minimal()+
#scale_x_discrete(labels = emojis) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
install.packages("ggimage")
ur <- ggplot(data_emojis,
aes(x=emojis,
y=`Número de Tweets`, fill = emojis,  label = emojis, image=url)) +
geom_bar(stat = "identity") +
geom_image(size = 5, vjust = 1) +
guides(fill = F)+
scale_fill_discrete(NULL, NULL, NULL)+
labs(title=str_wrap(titulo, width = 70),
y="Número de tweets",
x="") +
theme_minimal()+
#scale_x_discrete(labels = emojis) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
library(ggimage)
plotly <- plotly::ggplotly(ur,
tooltip = c("label", "y")
)%>%
plotly::layout(title = list(text = paste0(titulo,
'<br>',
'<sup>',
subtitulo,
'</sup>'),
y = 1.1),
tickvalues ="",
images = list(source=~url),
annotations = list(x = 1, y = 0,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
ur <- ggplot(data_emojis,
aes(x=emojis,
y=`Número de Tweets`, fill = emojis,  label = emojis, image=url)) +
geom_bar(stat = "identity") +
geom_image(size = 5, vjust = 1) +
guides(fill = F)+
scale_fill_discrete(NULL, NULL, NULL)+
labs(title=str_wrap(titulo, width = 70),
y="Número de tweets",
x="") +
theme_minimal()+
#scale_x_discrete(labels = emojis) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
ur
ur <- ggplot(data_emojis,
aes(x=emojis,
y=`Número de Tweets`, fill = emojis,  label = emojis, image=url)) +
geom_bar(stat = "identity") +
geom_image(size = 1, vjust = 1) +
guides(fill = F)+
scale_fill_discrete(NULL, NULL, NULL)+
labs(title=str_wrap(titulo, width = 70),
y="Número de tweets",
x="") +
theme_minimal()+
#scale_x_discrete(labels = emojis) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
ur
ur <- ggplot(data_emojis,
aes(x=emojis,
y=`Número de Tweets`, fill = emojis,  label = emojis, image=url)) +
geom_bar(stat = "identity") +
geom_image(size = .1, vjust = 1) +
guides(fill = F)+
scale_fill_discrete(NULL, NULL, NULL)+
labs(title=str_wrap(titulo, width = 70),
y="Número de tweets",
x="") +
theme_minimal()+
#scale_x_discrete(labels = emojis) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
ur
plotly <- plotly::ggplotly(ur,
tooltip = c("label", "y")
)%>%
plotly::layout(title = list(text = paste0(titulo,
'<br>',
'<sup>',
subtitulo,
'</sup>'),
y = 1.1),
tickvalues ="",
images = list(source=~url),
annotations = list(x = 1, y = 0,
text = caption,
showarrow = F,
xref='paper',
yref='paper',
xanchor='right',
yanchor='auto',
xshift=0,
yshift=0,
font=list(size=15, color="red")))
plotly
ur
knit(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output = "all")
knit(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output = "all()")
knit(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd")
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd",output_format = "all" )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd",output_format = c("pdf", "html") )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd",output_format = c("pdf_document", "html_document") )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = c("pdf_document", "html_document") , params )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = c("pdf_document", "html_document") , params )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = c("pdf_document", "html_document") , params )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = c("pdf_document", "html_document") , params )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = "pdf_document" , params )
knit_with_parameters('~/Desktop/extra/covid19_mex_Reportes/Unt.Rmd')
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = "pdf_document" , params )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = "pdf_document" , params )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = "pdf_document" , params )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = "pdf_document" , params )
---
title: "Reporte COVID-19"
author: '[Parametría](http://parametria.com.mx/)'
date: "`r format(Sys.time(), '%d/%m/%Y')`"
output:
html_document:
collapsed: no
css: style.css
df_print: paged
include:
after_body: footer.html
in_header: header.html
number_sections: no
theme: lumen
toc: no
toc_depth: 1
toc_float: yes
pdf_document:
toc: no
toc_depth: '1'
mail: lorenzoln@parametria.com.mx
github: LorenzoLeon/covid19_mex_Reportes
twitter: lolo7no
---
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = "all" , params )
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = "all" , params,  output_file = "unt")
rmarkdown::render(input = "Desktop/extra/covid19_mex_Reportes/Unt.Rmd", output_format = "all",  output_file = "unt")
tweets <- readRDS(file = "01_datos/tweets.rds")
setwd("Desktop/extra/COVID-19-Opinion/")
tweets <- readRDS(file = "01_datos/tweets.rds")
custom_stop_words <- enframe(tm::stopwords("es")) %>%
bind_rows(enframe(c( "t", "rt"))) %>%
rename(palabra = value)
require(rvest, quietly = T)
## remotes::install_github("wilkelab/ggtext")
require(ggtext, quietly = T)
## devtools::install_github("hadley/emo")
require(emo, quietly = T)
require(hrbrthemes, quietly = T)
require(tidytext, quietly = T)
require(emojifont)
require(ggrepel, quietly = T)
require(stringi, quietly = T)
require(ggthemes, quietly = T)
require(lubridate, quietly = T)
require(plotly, quietly = T)
require(RColorBrewer, quietly = T)
require(hrbthemes, quietly = T)
require(tidyverse, quietly = T)
require(htmlwidgets, quietly = T)
require(knitr, quietly = T)
load.emojifont("OpenSansEmoji.ttf")
load.emojifont("EmojiOne.ttf")
custom_stop_words <- enframe(tm::stopwords("es")) %>%
bind_rows(enframe(c( "t", "rt"))) %>%
rename(palabra = value)
t_pal_mas_freq <- tweets %>%
# Extraer palabras de título y agrupar por título
unnest_tokens(input = "texto", output = "palabra") %>%
# Quitar stopwords
anti_join(custom_stop_words) %>%
# Contar palabras
count(palabra, sort = TRUE) %>%
# Quitar missing values
drop_na() %>%
# palabras a mayúsculas
mutate(palabra = toupper(palabra))
t_pal_mas_freq <- t_pal_mas_freq %>% filter(!str_detect(palabra,"CLAU"))
head(t_pal_mas_freq, 20)
WC_topicos_twitter <- wordcloud2(head(t_pal_mas_freq, 100),
shape = "diamond",
size = .9,
#color = brewer.pal(n = 6, name = "Spectral"),
fontWeight = "bold",
minRotation = 1/pi,
maxRotation = 1/pi,
rotateRatio = 1
)
library(wordcloud2)
WC_topicos_twitter <- wordcloud2(head(t_pal_mas_freq, 100),
shape = "diamond",
size = .9,
#color = brewer.pal(n = 6, name = "Spectral"),
fontWeight = "bold",
minRotation = 1/pi,
maxRotation = 1/pi,
rotateRatio = 1
)
WC_topicos_twitter
saveWidgetFix(WC_topicos_twitter,libdir = "graph_dependencies", selfcontained = F,
file = "03_graficas/WC_topicos_twitter.html")
saveWidgetFix <- function (widget,file,...) {
## A wrapper to saveWidget which compensates for arguable BUG in
## saveWidget which requires `file` to be in current working
## directory.
wd<-getwd()
on.exit(setwd(wd))
outDir<-dirname(file)
file<-basename(file)
setwd(outDir);
saveWidget(widget,file=file,...)
}
saveWidgetFix(WC_topicos_twitter,libdir = "graph_dependencies", selfcontained = F,
file = "03_graficas/WC_topicos_twitter.html")
webshot::webshot("03_graficas/WC_topicos_twitter.html","03_graficas/WC_topicos_twitter.pdf",
delay =5, vwidth = 1000, vheight=1000)
hashtags <- tweets %>%
select(id_str, hashtags)%>%
unnest(cols = hashtags)%>%
mutate(hashtags = stri_trans_general(hashtags, "latin-ascii"))%>%
drop_na() %>%group_by(hashtags) %>% summarise(n = n()) %>%
arrange(desc(n)) %>%
filter(!stri_detect(hashtags, fixed = "covid", case_insensitive = T),
!stri_detect(hashtags, fixed = "coronavirus", case_insensitive = T))
head(hashtags, 20)
WC_hashtags_twitter <- wordcloud2(head(hashtags, 150),
shape = "circle",
size = 1,
#color = brewer.pal(n = 6, name = "Spectral"),
fontWeight = "bold",
minRotation = 0,#1/pi,
maxRotation = 0,#1/pi,
rotateRatio = 1
)
WC_hashtags_twitter
saveWidgetFix(WC_hashtags_twitter,libdir = "graph_dependencies", selfcontained = F,
file = "03_graficas/WC_hashtags_twitter.html")
webshot::webshot("03_graficas/WC_hashtags_twitter.html","03_graficas/WC_hashtags_twitter.pdf",
delay =5, vwidth = 1000, vheight=1000)
ats <- tweets %>%
select(id_str, ats)%>%
unnest(cols = ats)%>%
mutate_all(tolower)%>%
drop_na() %>%
group_by(ats) %>%
summarise(n = n()) %>%
arrange(desc(n))%>%
filter(!stri_detect(ats, fixed = "Claudi", case_insensitive = T))
head(ats, 20)
WC_ats_twitter <- wordcloud2(head(ats, 100),
shape = "diamond",
size = 1,
#color = brewer.pal(n = 6, name = "Spectral"),
fontWeight = "bold",
minRotation = 1/pi,
maxRotation = 1/pi,
rotateRatio = 1
)
WC_ats_twitter
saveWidgetFix(WC_ats_twitter,libdir = "graph_dependencies", selfcontained = F,
file = "03_graficas/WC_ats_twitter.html")
webshot::webshot("03_graficas/WC_ats_twitter.html","03_graficas/WC_ats_twitter.pdf",
delay =5, vwidth = 1000, vheight=1000)
headfreq <- head(t_pal_mas_freq, 20)
headhash <- head(hashtags, 20)
headats <- head(ats, 20)
tol <- bind_cols(headhash, headfreq, headats)
saveRDS(tol, "01_datos/tols.rds")
rm(list = ls(all.names = TRUE))
rmarkdown::render(input = "RedesSociales.Rmd",
output_format = "html_document", output_file = "RedesSociales")
rmarkdown::render(input = "AnalisisParametria.Rmd",
output_format = "html_document", output_file = "index")
rm(list = ls(all.names = TRUE))
rmarkdown::render(input = "RedesSociales.Rmd",
output_format = "html_document", output_file = "RedesSociales")
rm(list = ls(all.names = TRUE))
### Build Webpage
rmarkdown::render(input = "AnalisisParametria.Rmd",
output_format = "html_document", output_file = "index")
rm(list = ls(all.names = TRUE))
rmarkdown::render(input = "RedesSociales.Rmd",
output_format = "html_document", output_file = "RedesSociales")
rm(list = ls(all.names = TRUE))
rmarkdown::render(input = "RedesSociales.Rmd",
output_format = "html_document", output_file = "RedesSociales")
webshot::webshot("03_graficas/WC_ats_twitter.html","03_graficas/WC_ats_twitter.pdf",
delay =5, vwidth = 1000, vheight=1000)
saveWidgetFix(WC_ats_twitter,libdir = "graph_dependencies", selfcontained = F,
file = "03_graficas/WC_ats_twitter.html")
WC_ats_twitter <- wordcloud2(head(ats, 100),
shape = "diamond",
size = 1,
#color = brewer.pal(n = 6, name = "Spectral"),
fontWeight = "bold",
minRotation = 1/pi,
maxRotation = 1/pi,
rotateRatio = 1
)
ats <- tweets %>%
select(id_str, ats)%>%
unnest(cols = ats)%>%
mutate_all(tolower)%>%
drop_na() %>%
group_by(ats) %>%
summarise(n = n()) %>%
arrange(desc(n))%>%
filter(!stri_detect(ats, fixed = "Claudi", case_insensitive = T))
head(ats, 20)
WC_ats_twitter <- wordcloud2(head(ats, 100),
shape = "diamond",
size = 1,
#color = brewer.pal(n = 6, name = "Spectral"),
fontWeight = "bold",
minRotation = 1/pi,
maxRotation = 1/pi,
rotateRatio = 1
)
WC_ats_twitter
saveWidgetFix(WC_ats_twitter,libdir = "graph_dependencies", selfcontained = F,
file = "03_graficas/WC_ats_twitter.html")
saveWidgetFix(WC_ats_twitter,libdir = "graph_dependencies", selfcontained = T,
file = "03_graficas/WC_ats_twitter.html")
webshot::webshot("03_graficas/WC_ats_twitter.html","03_graficas/WC_ats_twitter.pdf",
delay =5, vwidth = 1000, vheight=1000)
saveWidgetFix(WC_ats_twitter,libdir = "graph_dependencies", selfcontained = F,
file = "03_graficas/WC_ats_twitter.html")
webshot::webshot("03_graficas/WC_ats_twitter.html","03_graficas/WC_ats_twitter.pdf",
delay =5, vwidth = 1000, vheight=1000)
webshot::webshot("03_graficas/WC_ats_twitter.html","03_graficas/WC_ats_twitter.pdf",
delay =5, vwidth = 1000, vheight=800)
webshot::webshot("03_graficas/WC_hashtags_twitter.html","03_graficas/WC_hashtags_twitter.pdf",
delay =5, vwidth = 1000, vheight=800)
webshot::webshot("03_graficas/WC_ats_twitter.html","03_graficas/WC_ats_twitter.pdf",
delay =5, vwidth = 1000, vheight=800)
rm(list = ls(all.names = TRUE))
rmarkdown::render(input = "RedesSociales.Rmd",
output_format = "html_document", output_file = "RedesSociales")
rm(list = ls(all.names = TRUE))
rmarkdown::render(input = "RedesSociales.Rmd",
output_format = "html_document", output_file = "RedesSociales")
include_graphics(path ="03_graficas/WC_hashtags_twitter.pdf", auto_pdf = T)
include_graphics(path ="03_graficas/WC_hashtags_twitter.pdf", auto_pdf = T)
include_graphics(path ="03_graficas/WC_hashtags_twitter.png", auto_pdf = T)
webshot::webshot("03_graficas/WC_topicos_twitter.html","03_graficas/WC_topicos_twitter.png",
delay =5, vwidth = 1000, vheight=800)
webshot::webshot("03_graficas/WC_hashtags_twitter.html","03_graficas/WC_hashtags_twitter.png",
delay =5, vwidth = 1000, vheight=800)
webshot::webshot("03_graficas/WC_ats_twitter.html","03_graficas/WC_ats_twitter.png",
delay =5, vwidth = 1000, vheight=800)
rm(list = ls(all.names = TRUE))
rmarkdown::render(input = "RedesSociales.Rmd",
output_format = "html_document", output_file = "RedesSociales")
rm(list = ls(all.names = TRUE))
rmarkdown::render(input = "RedesSociales.Rmd",
output_format = "html_document", output_file = "RedesSociales")
